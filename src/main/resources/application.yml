spring:
  cache:
    type: redis

  datasource:
    url: jdbc:mysql://${MYSQL_HOST}:3306/${MYSQL_DB}
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379
      username: ${REDIS_USER}
      password: ${REDIS_PASSWORD}
      timeout: 6000ms

  jpa:
    hibernate:
      ddl-auto: update # 또는 validate, none 등
#    show-sql: true
#    properties:
#      hibernate:
#        format_sql: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "{baseUrl}/login/oauth2/code/google"
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email



jwt:
  issuer: project.doctalk@gmail.com
  secret: "jfsgkhdsjkweoiruwqejkrfbhnsadkjlfghbwerqewrsdfgdsfagbdf"
  access-expiration: 3600
  refresh-expiration: 8640

server:
  port: 8080
  address: 0.0.0.0
  max-http-header-size: 16KB
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 1024 # 1KB ??? ??? ?? ??

springdoc:
  default-produces-media-type: application/json
  override-with-generic-response: false


#
#logging:
#  level:
#    root: INFO
#    org.springframework.security: DEBUG
#    com.opendata: DEBUG
#    org.hibernate.SQL: DEBUG
#    org.hibernate.type.descriptor.sql.BasicBinder: TRACE



api:
  seoul_city_data_key: ${SEOUL_CITY_DATA_KEY}
  tour_api_tourspot_key: ${TOUR_API_TOURSPOT_KEY}
  tour_api_congestion_key: B4FraEdNAEHerMG6ZQUi5OXCzio%2FQJ4IRx9rOOz7%2BeiPBh4L8pX4XAygutNaYnOoL%2BD8vS%2F3qZ53efN6daHZ%2Fg%3D%3D
  zz: wabF%2F2ep3dqrmXQcTNupVTpQXrL3wBuOK1TSRhAo8mwZ9Wqop4GCNUXkqSdf4%2Bwxa1%2FdOCkfmbBXYQL13wlwKQ%3D%3D
  xx: J28I%2B2X%2FLQ8vHJaw2Yorr492RFOq2%2FRBGCkl1hVMJCu65fNG5xDvDi7GazJpx3ZKa9xb4fYhq14vtXjWSaHrSw%3D%3D


