spring:
  profiles:
    active: prod
  cache:
    type: redis
  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379
      username: ${REDIS_USERNAME}
      password: ${REDIS_PASSWORD}
      timeout: 6000ms
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    serialization:
      write-dates-as-timestamps: false
  jpa:
    hibernate:
      ddl-auto: update
      show-sql: true
      properties:
        hibernate:
          format_sql: true
  flyway:
    enabled: false
    locations: classpath:db/migration, classpath:db/seed/dev
    clean-disabled: true
    validate-on-migrate: true
    baseline-on-migrate: true
    baseline-version: 0
    out-of-order: false
  security:
    oauth2:
      client:
        registration:
          google:
            client-name: google
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            redirect-uri: "https://api.yourse-seoul.com/login/oauth2/code/google"
            authorization-grant-type: authorization_code
            scope:
              - profile
              - email

jwt:
  issuer: project.doctalk@gmail.com
  secret: "jfsgkhdsjkweoiruwqejkrfbhnsadkjlfghbwerqewrsdfgdsfagbdf"
  access-expiration: 3600
  refresh-expiration: 8640

server:
  port: 8080
  address: 0.0.0.0
  max-http-header-size: 16KB
  compression:
    enabled: true
    mime-types: application/json,application/xml,text/html,text/xml,text/plain
    min-response-size: 1024

springdoc:
  default-produces-media-type: application/json
  override-with-generic-response: false
logging:
  level:
    org.hibernate.SQL: debug          # 실행되는 SQL문
    org.hibernate.type.descriptor.sql: trace  # 바인딩되는 파라미터 값
api:
  seoul_city_data_key: ${SEOUL_CITY_DATA_KEY}
  tour_api_tourspot_key: ${TOUR_API_TOURSPOT_KEY}
  tour_api_congestion_key: B4FraEdNAEHerMG6ZQUi5OXCzio%2FQJ4IRx9rOOz7%2BeiPBh4L8pX4XAygutNaYnOoL%2BD8vS%2F3qZ53efN6daHZ%2Fg%3D%3D
  zz: wabF%2F2ep3dqrmXQcTNupVTpQXrL3wBuOK1TSRhAo8mwZ9Wqop4GCNUXkqSdf4%2Bwxa1%2FdOCkfmbBXYQL13wlwKQ%3D%3D
  xx: J28I%2B2X%2FLQ8vHJaw2Yorr492RFOq2%2FRBGCkl1hVMJCu65fNG5xDvDi7GazJpx3ZKa9xb4fYhq14vtXjWSaHrSw%3D%3D

---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:mysql://127.0.0.1:3307/${MYSQL_DB}
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}

---
spring:
  config:
    activate:
      on-profile: prod
  datasource:
    url: jdbc:mysql://${MYSQL_HOST}:3306/${MYSQL_DB}
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}